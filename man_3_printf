.TH man_3_printf
.SH NAME
_printf - Display function formatted in the manner of the standard printf function of the C language.
.SH SYNOPSIS
#include <stdarg.h>
int _printf(const char *format, ...);
.SH DESCRIPTION
The _printf function allows formatted text to be displayed on the screen. It uses a format string consisting of regular characters and conversion specifiers to insert values into the displayed text.
The overall syntax of a conversion is:
%conversion.
The available conversion specifiers are: c, s, d, i, %.
.SH CONVERSION SPECIFIERS
d, i	The int argument is converted to signed decimal notation.
c	The int argument is converted to a char, and the resulting char is written.
s	Characters from the array are written up to (but not included) a terminating null byte ('\0').
%	A '%' is written. No argument is convertd. The complete conversion specification is '%%'.
.SH RETURN VALUE
The _printf function returns the total number of characters written (not includiing the final null character) if the operation was successful. If there is an error, it returns -1.
.SH ATTRIBUTES
|-------------------------------------------------------|
| Interface	| Attribute	| Value			|
|---------------|---------------|-----------------------|
| _printf()	| Thread safety	| MT-Safe locale	|
|-------------------------------------------------------|
.SH STANDARDS
_printf()
	C89, POSIX.1-2001.
.SH BUGS
Flag characters, field width, precision and length modifier are not taken into account.
.SH EXAMPLES
#include "main.h"
_printf("My name is %s and i'm %d years old.\n", "Marc", 35);
// Displays "My name is Marc and i'm 35 years old." followed by a newline.
#include "main.h"
_printf("That string is empty:%s, it's length is: %i.\n", "", 0);
// Displays "that string is empty:, it's length is 0." followed by a newline.
